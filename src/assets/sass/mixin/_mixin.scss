// -------- Screen Size --------
@mixin xs(){
    @media screen and (max-width: $media_xs){
        @content;
    }
}
@mixin sm(){
    @media screen and (max-width: $media_sm){
        @content;
    }
}
@mixin md(){
    @media screen and (max-width: $media_md){
        @content;
    }
}
@mixin lg(){
    @media screen and (max-width: $media_lg){
        @content;
    }
}
@mixin xl(){
    @media screen and (max-width: $media_xl){
        @content;
    }
}

// -------- Typography (Font) --------
// bigText, h1, h2, h3, h4, h5, h6, p, smallText, xsText
@mixin textStyle($f, $fw: default){
    @if($f == bigText){
        font-family: $bayon;
    }@else{
        font-family: $notoSansTC;
    }
    font-size: map-get($fontSize, $f)/10 + rem ;
    line-height: map-get($lineHeight, $f)/10 + rem;

    @if($fw == default){
        font-weight: $fontWeight-default;
    }@else if($fw == bold){
        font-weight: $fontWeight-bold;
    }

    letter-spacing: map-get($fontSize, $f) * map-get($letterSpacing, $f) / 10 + rem
}
// Bayon字體
@mixin bayon($fz){
    font-family: $bayon;
    font-size: calc($fz / 10)+ rem;
    line-height: calc($fz * 0.9 / 10)+ rem;
}

.bigText{ @include textStyle(bigText); }
h1{ @include textStyle(h1); }
h2{ @include textStyle(h2); }
h3{ @include textStyle(h3); }
h4{ @include textStyle(h4); }
h5{ @include textStyle(h5); }
h6{ @include textStyle(h6); }
p{ @include textStyle(p); }
.smallText{ @include textStyle(smallText); }
.xsText{ @include textStyle(xsText); }
.bold{ font-weight: $fontWeight-bold; }


// -------- btnSettings --------
@mixin btnBasic($size){
    @if($size == large){
        @include textStyle(h6);
        height: 4.8rem;
        padding: .8rem 1.6rem;
    }@else if($size == default){
        @include textStyle(p);
        height: 4rem;
        padding: .8rem 1.6rem;
    }@else if($size == small){
        @include textStyle(smallText);
        height: 3rem;
        padding: .4rem 1.6rem;
    }

    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;

    width: 100%;
    border-radius: 100px;
    text-align: center;
    transition: width .3s ease;

    span { display: inline-block; }
}
@mixin btnHover($size, $c){
    $t: 0;
    $circle: 0;
    @if($size == large){
        $circle: 8px;
        $t: 1.6rem;
    }@else if($size == default){
        $circle: 4px;
        $t: .8rem;
    }@else if($size == small){
        $circle: 3px;
        $t: .6rem;
    }

    width: calc(100% - $t);
    color: map-get($colors, $c);

    span{ 
        position: relative;
        transition: all .3s ease;
        &::after{ 
            content: "";
            position: absolute;
            top: calc(50% - $circle /2);
            right: -$t;
            
            width: $circle;
            height: $circle;
            border-radius: 50%;
            background-color: map-get($colors, $c); 

            opacity: 0;
            transition: all .3s ease; 
        }
    }

    &:hover{
        width: 100%;
        span{
            transform: translateX(-$t / 2);
            &::after{ opacity: 1; }
        }
    }
}

// -------- Background Circle --------
@mixin circle($bgc) { 
    z-index: -5;

    width: 1240px;
    height: 1240px;
    border-radius: 50%;
    background-color: $bgc;

    transform: translate(-50%, -50%); 
}