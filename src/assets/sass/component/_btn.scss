$btnStyles: (primary, white, outline, baseline, text);
$btnSizes: (large, default, small);

@each $theme in $themes {
    body.#{$theme}Theme{
        .defaultBtn{
            display: flex;
            align-items: center;
            justify-content: center;
        
            @each $style in $btnStyles {
                @each $size, $sizeProps in $btnSizes {
                    .btn.#{$style}.#{$size}{
                        @include btnBasic($size);
    
                        @if($style == primary){
                            @include btnHover($size, beige);
                            background-color: map-get($colors, $theme);
    
                        }@else if($style == white){
                            @include btnHover($size, $theme);
                            background-color: map-get($colors, beige);
    
                        }@else if($style == outline){
                            @include btnHover($size, $theme);
                            border: 1px solid map-get($colors, $theme);
                            background-color: transparent;
    
                        }@else if($style == baseline){
                            @include btnHover($size, $theme);
                            padding: 0;
                            border-radius: 0;
                            background-color: transparent;
    
                            span{ border-bottom: 1px solid map-get($colors, $theme); }
    
                        }@else if($style == text){
                            @include btnHover($size, $theme);
                            padding: 0;
                            border-radius: 0;
                            background-color: transparent;
                        }
                    }
                }
            }
        }
    }
}
.formBtn{
    display: flex;
    align-items: center;
    justify-content: center;

    $size: default;
    .btn{
        @include btnBasic($size);

        &.option{
            @include btnHover($size, brown);
            background-color: map-get($colors, beige);
        }
        &.nextQ{
            @include btnHover($size, beige);
            background-color: map-get($colors, red);
        }
        &.lastQ{
            @include btnHover($size, red);
            border-radius: 0;
            background-color: transparent;

            span{ border-bottom: 1px solid map-get($colors, red); }
        }
    }
    &.-active .option{
        border: 1px solid map-get($colors, red);
    }
}
.eventBtn{
    display: flex;
    align-items: center;
    justify-content: center;

    $size: small;
    .btn{
        @include btnBasic($size);

        &.attend{
            @include btnHover($size, beige);
            background-color: map-get($colors, blue);
        }
        &.edit{
            @include btnHover($size, brown);
            background-color: map-get($colors, yellow-2);
        }
        &.registered{
            @include btnHover($size, blue);
            border: 1px solid map-get($colors, blue);
            background-color: transparent;
        }
        &.disable{
            color: map-get($colors, natural-2);
            border: 1px solid map-get($colors, natural-2);
            background-color: transparent;

            &:hover{
                cursor: not-allowed;
            }
        }
    }
}