$btnStyles: (
    primary: (
        bgc: map-get($colors, red),
        color: map-get($colors, beige),
    ),
    blue: (
        bgc: map-get($colors, blue),
        color: map-get($colors, beige),
    ),
    white: (
        bgc: map-get($colors, natural-0),
        color: map-get($colors, red),
    ),
    outline: (
        bgc: transparent,
        color: map-get($colors, red),
    ),
    text: (
        borderRadius: 0,
        bgc: transparent,
        color: map-get($colors, red),
    ),
    textBlue: (
        borderRadius: 0,
        bgc: transparent,
        color: map-get($colors, blue),
    ),
    textRed: (
        borderRadius: 0,
        bgc: transparent,
        color: map-get($colors, red),
    )

);
$btnSizes: (
    large: (
        textStyle: h6,
        height: 4.8rem,
        padding: .8rem 1.6rem,
        circleSize: 8px,
        translate: -2.4rem,
    ),
    default: (
        textStyle: p,
        height: 4.8rem,
        padding: .8rem 1.6rem,
        circleSize: 4px,
        translate: -2rem,
    ),
    small: (
        textStyle: smallText,
        height: 3rem,
        padding: .4rem 1.6rem,
        circleSize: 3px,
        translate: -1.3rem,
    ),
);
@mixin buttonStyle($bgc, $color, $border: null, $borderBottom: null, $borderRadius: 100px){
    background-color: $bgc;
    color: $color;
    border: $border;
    border-bottom: $borderBottom;
    border-radius: $borderRadius; 

    span::after{
        background-color: $color;
    }
}
@mixin buttonSize($textStyle, $height, $padding, $circleSize, $translate){
    @include textStyle($textStyle);
    height: $height;
    padding: $padding;

    span::after{
        width: $circleSize;
        height: $circleSize;
        right: $translate;
    }
    &:hover span{
        transform: translateX($translate);
    }
}

@each $style, $styleProps in $btnStyles {
    @each $size, $sizeProps in $btnSizes {
        $bgc: map-get($styleProps, bgc);
        $color: map-get($styleProps, color);
        $text: map-get($sizeProps, textStyle);
        $h: map-get($sizeProps, height);
        $pd: map-get($sizeProps, padding);
        $circleSize: map-get($sizeProps, circleSize);
        $translate: map-get($sizeProps, translate);
        $br: map-get($styleProps, borderRadius);

        .btn.#{$style}.#{$size}{
            @include textStyle($text);
            cursor: pointer;

            width: 100%;
            height: $h;
            padding: $pd;
            background-color: $bgc;
            
            color: $color;
            text-align: center;
            
            @if($br != 0){
                border-radius: 100px;
            }@else{
                border-radius: 0;
            }
            @if($style == 'outline'){
                border: 1px solid $color;
            }@else if($style == 'text'){
                border-bottom: 1px solid $color;
            }

            span {
                display: inline-block;
                position: relative;
                transition: all .3s ease;
            
                &::after {
                    content: "";
                    position: absolute;
                    top: calc(50% - $circleSize/2);
                    right: $translate;

                    width: $circleSize;
                    height: $circleSize;
                    border-radius: 50%;
                    background-color: $color;
                    
                    opacity: 0;
                    transition: all .3s ease;   
                }
            }
            
            &:hover span{
                transform: translateX($translate);

                &::after { opacity: 1; }
            }
        }
    }
}